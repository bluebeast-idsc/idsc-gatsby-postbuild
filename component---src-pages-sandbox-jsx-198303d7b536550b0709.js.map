{"version":3,"sources":["webpack://idsc-gatsby-wordpress/./src/components/Form/InlineForm.jsx","webpack://idsc-gatsby-wordpress/./src/pages/sandbox.jsx"],"names":["validate","Yup","firstName","max","required","lastName","email","borderColor","borderWidth","initialValues","validationSchema","onSubmit","values","addToMailchimp","result","console","log","formik","as","Form","spacing","TextField","size","type","label","name","placeholder","w","colorScheme","textTransform"],"mappings":"gUAwFA,EAhFmB,WACjB,IAAMA,EAAWC,KAAW,CAC1BC,UAAWD,OACRE,IAAI,GAAI,iCACRC,SAAS,+BACZC,SAAUJ,OACPE,IAAI,GAAI,iCACRC,SAAS,8BACZE,MAAOL,OACJK,MAAM,wCACNF,SAAS,uCAKd,OACE,gBAAC,KAAD,CAAOG,YAAY,YAAYC,YAAY,OACzC,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,IAAD,4BACA,gBAAC,IAAD,sCACA,gBAAC,IAAD,sDACA,gBAAC,IAAD,6EAKJ,gBAAC,KAAD,KACE,gBAAC,KAAD,CACEC,cAAe,CACbP,UAAW,GACXG,SAAU,GACVC,MAAO,IAETI,iBAAkBV,EAClBW,SAAQ,mCAAE,WAAMC,GAAN,wFACaC,OAAeD,EAAON,MAAOM,GAD1C,OACFE,EADE,OAERC,QAAQC,IAAIF,GAFJ,2CAAF,wDAKP,SAAAG,GAAM,OACL,gBAAC,KAAD,CAAQC,GAAIC,KAAMC,QAAQ,UACxB,gBAACC,EAAA,EAAD,CACEC,KAAK,KACLC,KAAK,OACLC,MAAM,aACNC,KAAK,YACLC,YAAY,eAEd,gBAACL,EAAA,EAAD,CACEC,KAAK,KACLC,KAAK,OACLC,MAAM,YACNC,KAAK,WACLC,YAAY,cAEd,gBAACL,EAAA,EAAD,CACEC,KAAK,KACLC,KAAK,QACLC,MAAM,QACNC,KAAK,QACLC,YAAY,UAEd,gBAAC,IAAD,CACEJ,KAAK,KACLK,EAAE,OACFC,YAAY,QACZC,cAAc,YACdN,KAAK,UALP,qBChEd,EAJgB,WACd,OAAO,gBAAC,EAAD","file":"component---src-pages-sandbox-jsx-198303d7b536550b0709.js","sourcesContent":["import React from \"react\"\nimport { Stack, VStack, Box, Button, Heading, Text } from \"@chakra-ui/react\"\nimport { Formik, Form, Field, ErrorMessage } from \"formik\"\nimport TextField from \"./TextField\"\nimport * as Yup from \"yup\"\nimport addToMailchimp from \"gatsby-plugin-mailchimp\"\nimport lowerBg from \"./lowerBg.svg\"\n\nconst InlineForm = () => {\n  const validate = Yup.object({\n    firstName: Yup.string()\n      .max(15, \"Must be 15 characters or less\")\n      .required(\"Your first name is required\"),\n    lastName: Yup.string()\n      .max(20, \"Must be 20 characters or less\")\n      .required(\"Your last name is required\"),\n    email: Yup.string()\n      .email(\"Please provide a valid email address\")\n      .required(\"A valid email address is required\"),\n  })\n  const verifyCallback = response => {\n    console.log(response)\n  }\n  return (\n    <Stack borderColor=\"brand.500\" borderWidth=\"3px\">\n      <Stack>\n        <Box>\n          <Heading>Keep It New Program</Heading>\n          <Text>FREE Maintenance For 3-Years!</Text>\n          <Text>It's a $1,300 value only at Martin Chevrolet.</Text>\n          <Text>\n            Subscribe to the iDriveSoCal newsletter and we'll email the offer.\n          </Text>\n        </Box>\n      </Stack>\n      <Stack>\n        <Formik\n          initialValues={{\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n          }}\n          validationSchema={validate}\n          onSubmit={async values => {\n            const result = await addToMailchimp(values.email, values)\n            console.log(result)\n          }}\n        >\n          {formik => (\n            <VStack as={Form} spacing=\"0.8rem\">\n              <TextField\n                size=\"lg\"\n                type=\"text\"\n                label=\"First Name\"\n                name=\"firstName\"\n                placeholder=\"First Name\"\n              />\n              <TextField\n                size=\"lg\"\n                type=\"text\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n              />\n              <TextField\n                size=\"lg\"\n                type=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                placeholder=\"Email\"\n              />\n              <Button\n                size=\"lg\"\n                w=\"100%\"\n                colorScheme=\"green\"\n                textTransform=\"uppercase\"\n                type=\"submit\"\n              >\n                Subscribe!\n              </Button>\n            </VStack>\n          )}\n        </Formik>\n      </Stack>\n    </Stack>\n  )\n}\n\nexport default InlineForm\n","import React from \"react\"\nimport InlineForm from \"../components/Form/InlineForm\"\n\nconst sandbox = () => {\n  return <InlineForm />\n}\n\nexport default sandbox\n"],"sourceRoot":""}